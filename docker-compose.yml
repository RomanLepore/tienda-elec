version: "3.9"
services:
  eureka-sv:
    image: eureka-image
    container_name: eureka-container
    ports:
      - "8761:8761"
    networks:
      - spring-network

  api-gateway:
    image: gateway-image
    container_name: gateway-container
    ports:
      - "8181:8181"
    networks:
      - spring-network

  config-sv:
    image: config-sv-image
    container_name: config-sv-container
    ports:
      - "8585:8585"
    networks:
      - spring-network

  producto-services:
    image: producto-image
    container_name: producto-container
    ports:
      - "8081:8081"
    build:
      context: producto-services
      dockerfile: Dockerfile
    networks:
      - spring-network

  carrito-services:
    image: carrito-image
    container_name: carrito-container
    build:
      context: carrito-services
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - spring-network
    depends_on:
      - mysql

  ventas-services:
    image: ventas-image
    container_name: ventas-container
    ports:
      - "8084:8084"
    build:
      context: ventas-services
      dockerfile: Dockerfile
    networks:
      - spring-network
    depends_on:
      - mysql2

  mysql:
    image: mysql
    container_name: bd_carrito
    environment:
      MYSQL_ROOT_PASSWORD: N1rivnUTMXzt0TJ
      MYSQL_DATABASE: servicio_carrito
      MYSQL_USER: admin
      MYSQL_PASSWORD: N1rivnUTMXzt0TJ
    ports:
      - "3307:3306"
    networks:
      - spring-network
    volumes:
      - mysql-volume:/var/lib/mysql

  mysql2:
    image: mysql
    container_name: bd_ventas
    environment:
      MYSQL_ROOT_PASSWORD: N1rivnUTMXzt0TJ
      MYSQL_DATABASE: servicio_ventas
      MYSQL_USER: admin
      MYSQL_PASSWORD: N1rivnUTMXzt0TJ
    ports:
      - "3308:3306"
    networks:
      - spring-network
    volumes:
      - mysql2-volume:/var/lib/mysql2

networks:
  spring-network:
volumes:
  mysql-volume:
  mysql2-volume: